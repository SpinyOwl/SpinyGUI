plugins {
    id "org.sonarqube" version "3.2.0"
    id "checkstyle"
}

project.group = 'com.spinyowl'

printProjectInfo()

private void printProjectInfo() {
    println "##################################################"
    println "# Project info:                                  #"
    println sprintf("#     group:    %-33s#", project.group)
    println sprintf("#     name:     %-33s#", project.name)
    println sprintf("#     version:  %-33s#", project.version)
    println "##################################################"
}

subprojects {
    group = 'com.spinyowl'
    version = rootProject.version

    buildDir = new File(rootProject.projectDir, "build/" + project.name)

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://raw.githubusercontent.com/SpinyOwl/repo/releases" }
    }

    plugins.withType(JavaPlugin).configureEach {
        java {
            modularity.inferModulePath = true
        }

        sourceCompatibility = 1.16
        targetCompatibility = 1.16

        compileJava.options.encoding = "UTF-8"
        compileTestJava.options.encoding = "UTF-8"
        javadoc.options.encoding = 'UTF-8'

        dependencies {

            compileOnly group: 'org.projectlombok', name: 'lombok', version: lombok_version
            annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombok_version

            testCompileOnly group: 'org.projectlombok', name: 'lombok', version: lombok_version
            testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombok_version

            // api
            // implementation
            testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
            testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.1'
            testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
        }
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
    }
}

def sonarLogin = System.getProperty("sonarLogin") ?: System.getenv("sonarLogin") ?: null

sonarqube {
    properties {
        property "sonar.projectKey", "SpinyOwl_SpinyGUI"
        property "sonar.organization", "spinyowl"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", sonarLogin
    }
}