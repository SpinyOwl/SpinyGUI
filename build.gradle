plugins {
    id "org.sonarqube" version "3.4.0.2513"
    id "checkstyle"
}

project.group = 'com.spinyowl'

printProjectInfo()

private void printProjectInfo() {
    println "##################################################"
    println "# Build info:                                    #"
    println sprintf("#     Project group:    %-25s#", project.group)
    println sprintf("#     Project name:     %-25s#", project.name)
    println sprintf("#     Project version:  %-25s#", project.version)
    println sprintf("#     Java version:     %-25s#", JavaVersion.current())
    println "##################################################"
}

subprojects {
    group = 'com.spinyowl'
    version = rootProject.version

    buildDir = new File(rootProject.projectDir, "build/${project.name}")

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://raw.githubusercontent.com/SpinyOwl/repo/releases" }
    }

    plugins.withType(JavaLibraryPlugin).configureEach {
        java {
            modularity.inferModulePath = true
        }

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17

        compileJava.options.encoding = "UTF-8"
        compileTestJava.options.encoding = "UTF-8"
        javadoc.options.encoding = 'UTF-8'

        dependencies {
            api group: 'org.projectlombok', name: 'lombok', version: lombok_version
            annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombok_version

            testCompileOnly group: 'org.projectlombok', name: 'lombok', version: lombok_version
            testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombok_version

            // api
            // implementation
            testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junit_version
            testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: junit_version
            testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junit_version
        }
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
    }
}

def sonarLogin = System.getProperty("sonarLogin") ?: System.getenv("sonarLogin") ?: null

sonarqube {
    properties {
        property "sonar.projectKey", "SpinyOwl_SpinyGUI"
        property "sonar.java.source", "17"
        property "sonar.organization", "spinyowl"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", sonarLogin
    }
}
